from aiogram.types import (
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton
)
from typing import Sequence

# --- –û–±—â–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏ (–¥–ª—è –∞–¥–º–∏–Ω–∞) ---

def _confirm_cancel_row(appointment_id: int) -> list[InlineKeyboardButton]:
    """–†—è–¥ –∏–∑ –¥–≤—É—Ö –∫–Ω–æ–ø–æ–∫: –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å / –û—Ç–º–µ–Ω–∏—Ç—å (–¥–ª—è –∞–¥–º–∏–Ω–∞)."""
    if appointment_id is None:
        raise ValueError("appointment_id –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å None")
    return [
        InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_{appointment_id}"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",   callback_data=f"cancel_{appointment_id}"),
    ]

def confirmation_keyboard(appointment_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–æ–ª—å–∫–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º/–æ—Ç–º–µ–Ω–æ–π (–¥–ª—è –∞–¥–º–∏–Ω–∞)."""
    return InlineKeyboardMarkup(inline_keyboard=[_confirm_cancel_row(appointment_id)])

def admin_control_buttons(appointment_id: int) -> InlineKeyboardMarkup:
    """–ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∞ (–ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Å –∑–∞–ø–∏—Å—å—é)."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            _confirm_cancel_row(appointment_id),
            [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å", callback_data=f"delete_{appointment_id}")],
        ]
    )

# --- –ò–Ω–ª–∞–π–Ω: –≤—ã–±–æ—Ä —É—Å–ª—É–≥–∏ (–¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞) ---

def services_keyboard(services: Sequence, cols: int = 2) -> InlineKeyboardMarkup:
    """–°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ —Å –∫–Ω–æ–ø–∫–∞–º–∏, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –ø–æ cols –≤ —Ä—è–¥."""
    rows: list[list[InlineKeyboardButton]] = []
    row: list[InlineKeyboardButton] = []
    for i, svc in enumerate(services, 1):
        row.append(InlineKeyboardButton(text=svc.name, callback_data=f"svc_{svc.id}"))
        if i % cols == 0:
            rows.append(row)
            row = []
    if row:
        rows.append(row)
    return InlineKeyboardMarkup(inline_keyboard=rows)

# --- –ò–Ω–ª–∞–π–Ω: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–æ–µ–π –∑–∞–ø–∏—Å—å—é (–¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞) ---

def my_appointment_keyboard(appointment_id: int) -> InlineKeyboardMarkup:
    """–ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞: –ø–µ—Ä–µ–Ω–æ—Å / –æ—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏."""
    return InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text="üîÅ –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏", callback_data=f"cli_resched_{appointment_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",  callback_data=f"cli_cancel_{appointment_id}"),
        ]]
    )

# --- Reply-–º–µ–Ω—é ---

client_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚úÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è üìù")],
        [KeyboardButton(text="‚úÖ –ú–æ–∏ –∑–∞–ø–∏—Å–∏ üìÖ")],
    ],
    resize_keyboard=True,
    one_time_keyboard=True,   # —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è
)

ADMIN_MENU_LIST_LABEL   = "üìã –°–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π"
ADMIN_MENU_DELETE_LABEL = "üóë –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å"
ADMIN_MENU_EDIT_LABEL   = "‚úè –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å"

admin_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text=ADMIN_MENU_LIST_LABEL)],
        [KeyboardButton(text=ADMIN_MENU_DELETE_LABEL), KeyboardButton(text=ADMIN_MENU_EDIT_LABEL)],
    ],
    resize_keyboard=True,
    one_time_keyboard=False,
)
